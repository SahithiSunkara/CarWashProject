import { Component, OnInit } from '@angular/core';
import { FormControl,FormGroup,Validators ,FormBuilder} from '@angular/forms';
import { CustomerService } from '../customer.service';
import { MatDialogModule } from '@angular/material/dialog';
import { MatTabsModule } from '@angular/material/tabs';
import {MatFormFieldModule,MatFormFieldControl} from '@angular/material/form-field';
import {MatSelectModule} from '@angular/material/select';
import { Router, ActivatedRoute, ParamMap } from '@angular/router';
import { OrderDetails } from '.././OrderDetails';

interface Food {
  value: string;
  viewValue: string;
}

@Component({
  selector: 'app-new-order',
  templateUrl: './new-order.component.html',
  styleUrls: ['./new-order.component.css']
})
export class NewOrderComponent implements OnInit {

clicked: boolean = false;
			response : any;
			packages: any = ['package1', 'package2', 'package3', 'package4']
		
		
	
  constructor(private service:CustomerService,public formBuilder: FormBuilder,private actrouter:ActivatedRoute) {
	
 }
packageForm = this.formBuilder.group({
    name: ['']
  })

			orderform = new FormGroup({
			car_no : new FormControl('',Validators.required),
			scheduled_date : new FormControl(''),
			delivery_date : new FormControl('',Validators.required),
			pickuplocation : new FormControl('',Validators.required),
			droplocation : new FormControl('',Validators.required),
			notes : new FormControl('',Validators.required),
			add_ons : new FormControl('',Validators.required),
			packages : this.packageForm.value
			
		})
  ngOnInit(): void {
	
		this.actrouter.paramMap.subscribe(params => {
			const orderId= +params.get('id');
			if(orderId){
				this.getUser(orderId);
			}
		})	
  }

			getUser(orderId: number){
				this.service.getbyOrderId(orderId).subscribe((orders: OrderDetails) =>{
					this.editUser(orders),
					(error: any) => console.log(error)
				})
			}

		editUser(orders: OrderDetails){
			this.orderform.patchValue({
				
			})
		}

			onSubmit(){
				console.log(this.orderform.value)
				this.service.createOrder(this.orderform.value).subscribe((result)=>{
		console.warn(result)
		this.response = result
		this.router.navigate(['/customerhome']);
			})
}

}
