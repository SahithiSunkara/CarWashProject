package com.carwashadmin.main.serviceimpl;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.tomcat.util.http.fileupload.impl.IOFileUploadException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.http.ResponseEntity.BodyBuilder;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.multipart.MultipartFile;

import com.carwashadmin.main.bean.CustomerDetails;
import com.carwashadmin.main.bean.Details;
import com.carwashadmin.main.bean.ImageData;
import com.carwashadmin.main.bean.Test;
import com.carwashadmin.main.image.ImageClass;
import com.carwashadmin.main.repository.DetRepo;
import com.carwashadmin.main.repository.TestRepo;
import com.carwashadmin.main.service.CustomerService;

@Service
public class CustomerServiceImpl implements CustomerService{

	@Autowired
	DetRepo detRepo;
	
	@Autowired
	TestRepo test;
	
	@SuppressWarnings("unchecked")
	public Details AddDetails(Details details) throws IOException{

		/*
		 * ArrayList<CustomerDetails> det = new ArrayList<CustomerDetails>();
		 * det.addAll(details);
		 */
		return test.save(details);
	}

	@Override
	public List<Details> UpdateDetails(Details details) throws IOException{

		String email = details.getEmail();
		List<Details> dbData = test.findByEmail(email);
		System.out.println(dbData);
		System.out.println(dbData.indexOf(details));
		int i=dbData.indexOf(details);
		Details  updatedData = null;
		if(dbData != null) {

			dbData.get(i).setFirstName(details.getFirstName());
			dbData.get(i).setMiddleName(details.getMiddleName());
			dbData.get(i).setLastName(details.getLastName());
			dbData.get(i).setEmail(details.getEmail());
			dbData.get(i).setPhone_no(details.getPhone_no());
			dbData.get(i).setAddress(details.getAddress());
			dbData.get(i).setPassword(details.getPassword());
		}
		List<Details> NewData = test.saveAll(dbData);
		return NewData;
	}

	@Override
	public CustomerDetails getDetails(String Id) throws IOException{

		Optional<CustomerDetails> details = null;
		CustomerDetails det = null;
		details= detRepo.findById(Id);
		byte[] img=null;
		if(details.isPresent() == true) {
			
			img=ImageClass.decompressBytes(details.get().getPhoto());
			details.get().setPhoto(img);
			
			det= details.get();
			return det;
		}
		return det;
	}

	@Override
	public BodyBuilder UploadFile(MultipartFile file) throws IOFileUploadException {
		// TODO Auto-generated method stub
		/*
		 * byte[] img=null; img=ImageClass.compressBytes(file.getBytes());
		 * detRepo.save(img);
		 */
		return ResponseEntity.status(HttpStatus.OK);

	}

	

}
